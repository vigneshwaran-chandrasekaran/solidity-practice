{
	"id": "34fdd254947bb448a234e2496f223c0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ForAndWhileLoops.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract ForAndWhileLoops {\n    function loops() external pure {\n        for(uint i = 0; i < 10; i++) {\n            if(i < 3) {\n                continue;\n            }\n\n            if(i == 5) {\n                break;\n            }\n        }\n\n        uint j = 0;\n        while(j < 3) {\n            j++;\n        }\n    }\n\n    function sum(uint _n) external pure  {\n\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ForAndWhileLoops.sol": {
				"ForAndWhileLoops": {
					"abi": [
						{
							"inputs": [],
							"name": "loops",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_n",
									"type": "uint256"
								}
							],
							"name": "sum",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ForAndWhileLoops.sol\":58:428  contract ForAndWhileLoops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ForAndWhileLoops.sol\":58:428  contract ForAndWhileLoops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x188b85b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x938b9ceb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ForAndWhileLoops.sol\":381:426  function sum(uint _n) external pure  {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/ForAndWhileLoops.sol\":90:375  function loops() external pure {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/ForAndWhileLoops.sol\":381:426  function sum(uint _n) external pure  {... */\n    tag_8:\n      pop\n      jump\t// out\n        /* \"contracts/ForAndWhileLoops.sol\":90:375  function loops() external pure {... */\n    tag_10:\n        /* \"contracts/ForAndWhileLoops.sol\":135:141  uint i */\n      0x00\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n    tag_13:\n        /* \"contracts/ForAndWhileLoops.sol\":151:153  10 */\n      0x0a\n        /* \"contracts/ForAndWhileLoops.sol\":147:148  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":147:153  i < 10 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_14\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":181:182  3 */\n      0x03\n        /* \"contracts/ForAndWhileLoops.sol\":177:178  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":177:182  i < 3 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":174:225  if(i < 3) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":202:210  continue */\n      jump(tag_15)\n        /* \"contracts/ForAndWhileLoops.sol\":174:225  if(i < 3) {... */\n    tag_16:\n        /* \"contracts/ForAndWhileLoops.sol\":247:248  5 */\n      0x05\n        /* \"contracts/ForAndWhileLoops.sol\":242:243  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":242:248  i == 5 */\n      eq\n        /* \"contracts/ForAndWhileLoops.sol\":239:288  if(i == 5) {... */\n      iszero\n      tag_17\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":268:273  break */\n      jump(tag_14)\n        /* \"contracts/ForAndWhileLoops.sol\":239:288  if(i == 5) {... */\n    tag_17:\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n    tag_15:\n        /* \"contracts/ForAndWhileLoops.sol\":155:158  i++ */\n      dup1\n      dup1\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap2\n      pop\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n      jump(tag_13)\n    tag_14:\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":308:314  uint j */\n      0x00\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n    tag_20:\n        /* \"contracts/ForAndWhileLoops.sol\":338:339  3 */\n      0x03\n        /* \"contracts/ForAndWhileLoops.sol\":334:335  j */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":334:339  j < 3 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":355:358  j++ */\n      dup1\n      dup1\n      tag_22\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      swap2\n      pop\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n      jump(tag_20)\n    tag_21:\n        /* \"contracts/ForAndWhileLoops.sol\":121:375  {... */\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":90:375  function loops() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_24:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_26\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_7:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":228:347   */\n    tag_29:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_32\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:645   */\n    tag_35:\n        /* \"#utility.yul\":605:612   */\n      0x00\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":623:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":651:884   */\n    tag_19:\n        /* \"#utility.yul\":690:693   */\n      0x00\n        /* \"#utility.yul\":713:737   */\n      tag_38\n        /* \"#utility.yul\":731:736   */\n      dup3\n        /* \"#utility.yul\":713:737   */\n      tag_35\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":704:737   */\n      swap2\n      pop\n        /* \"#utility.yul\":759:825   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":752:757   */\n      dup3\n        /* \"#utility.yul\":749:826   */\n      eq\n        /* \"#utility.yul\":746:849   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":829:847   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":746:849   */\n    tag_39:\n        /* \"#utility.yul\":876:877   */\n      0x01\n        /* \"#utility.yul\":869:874   */\n      dup3\n        /* \"#utility.yul\":865:878   */\n      add\n        /* \"#utility.yul\":858:878   */\n      swap1\n      pop\n        /* \"#utility.yul\":651:884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:1070   */\n    tag_41:\n        /* \"#utility.yul\":938:1015   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":935:936   */\n      0x00\n        /* \"#utility.yul\":928:1016   */\n      mstore\n        /* \"#utility.yul\":1035:1039   */\n      0x11\n        /* \"#utility.yul\":1032:1033   */\n      0x04\n        /* \"#utility.yul\":1025:1040   */\n      mstore\n        /* \"#utility.yul\":1059:1063   */\n      0x24\n        /* \"#utility.yul\":1056:1057   */\n      0x00\n        /* \"#utility.yul\":1049:1064   */\n      revert\n        /* \"#utility.yul\":1199:1316   */\n    tag_31:\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1305:1306   */\n      dup1\n        /* \"#utility.yul\":1298:1310   */\n      revert\n        /* \"#utility.yul\":1322:1444   */\n    tag_27:\n        /* \"#utility.yul\":1395:1419   */\n      tag_47\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1395:1419   */\n      tag_35\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1388:1393   */\n      dup2\n        /* \"#utility.yul\":1385:1420   */\n      eq\n        /* \"#utility.yul\":1375:1438   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1434:1435   */\n      0x00\n        /* \"#utility.yul\":1431:1432   */\n      dup1\n        /* \"#utility.yul\":1424:1436   */\n      revert\n        /* \"#utility.yul\":1375:1438   */\n    tag_48:\n        /* \"#utility.yul\":1322:1444   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004f641c1421057df080231a622812f3687c11dea7bbea45cb05da5b638434aff64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063938b9ceb14610057575b600080fd5b610055600480360381019061005091906100d8565b610061565b005b61005f610064565b005b50565b60005b600a8110156100a057600381101561007e5761008d565b600581141561008c576100a0565b5b80806100989061010f565b915050610067565b5060005b60038110156100c05780806100b89061010f565b9150506100a4565b50565b6000813590506100d28161018c565b92915050565b6000602082840312156100ee576100ed610187565b5b60006100fc848285016100c3565b91505092915050565b6000819050919050565b600061011a82610105565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561014d5761014c610158565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61019581610105565b81146101a057600080fd5b5056fea264697066735822122004f641c1421057df080231a622812f3687c11dea7bbea45cb05da5b638434aff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x7E JUMPI PUSH2 0x8D JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x8C JUMPI PUSH2 0xA0 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x98 SWAP1 PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xC0 JUMPI DUP1 DUP1 PUSH2 0xB8 SWAP1 PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2 DUP2 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE JUMPI PUSH2 0xED PUSH2 0x187 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A DUP3 PUSH2 0x105 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x14D JUMPI PUSH2 0x14C PUSH2 0x158 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x105 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xF6 COINBASE 0xC1 TIMESTAMP LT JUMPI 0xDF ADDMOD MUL BALANCE 0xA6 0x22 DUP2 0x2F CALLDATASIZE DUP8 0xC1 SAR 0xEA PUSH28 0xBEA45CB05DA5B638434AFF64736F6C63430008070033000000000000 ",
							"sourceMap": "58:370:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loops_41": {
									"entryPoint": 100,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sum_47": {
									"entryPoint": 97,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1447:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "520:6:1",
														"type": ""
													}
												],
												"src": "487:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "605:7:1",
														"type": ""
													}
												],
												"src": "568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "731:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "713:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "827:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "829:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "829:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "829:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "752:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "749:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "749:77:1"
															},
															"nodeType": "YulIf",
															"src": "746:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "858:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "869:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "690:3:1",
														"type": ""
													}
												],
												"src": "651:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "918:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "935:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "928:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1035:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "890:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1182:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1175:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1076:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1288:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1298:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1365:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1422:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1431:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1424:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1424:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1424:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1413:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1395:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1395:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:43:1"
															},
															"nodeType": "YulIf",
															"src": "1375:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1358:5:1",
														"type": ""
													}
												],
												"src": "1322:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063188b85b41461003b578063938b9ceb14610057575b600080fd5b610055600480360381019061005091906100d8565b610061565b005b61005f610064565b005b50565b60005b600a8110156100a057600381101561007e5761008d565b600581141561008c576100a0565b5b80806100989061010f565b915050610067565b5060005b60038110156100c05780806100b89061010f565b9150506100a4565b50565b6000813590506100d28161018c565b92915050565b6000602082840312156100ee576100ed610187565b5b60006100fc848285016100c3565b91505092915050565b6000819050919050565b600061011a82610105565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561014d5761014c610158565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61019581610105565b81146101a057600080fd5b5056fea264697066735822122004f641c1421057df080231a622812f3687c11dea7bbea45cb05da5b638434aff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x188B85B4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x64 JUMP JUMPDEST STOP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x7E JUMPI PUSH2 0x8D JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x8C JUMPI PUSH2 0xA0 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x98 SWAP1 PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xC0 JUMPI DUP1 DUP1 PUSH2 0xB8 SWAP1 PUSH2 0x10F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2 DUP2 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE JUMPI PUSH2 0xED PUSH2 0x187 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A DUP3 PUSH2 0x105 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x14D JUMPI PUSH2 0x14C PUSH2 0x158 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x105 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xF6 COINBASE 0xC1 TIMESTAMP LT JUMPI 0xDF ADDMOD MUL BALANCE 0xA6 0x22 DUP2 0x2F CALLDATASIZE DUP8 0xC1 SAR 0xEA PUSH28 0xBEA45CB05DA5B638434AFF64736F6C63430008070033000000000000 ",
							"sourceMap": "58:370:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;381:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;90:285;;;:::i;:::-;;381:45;;:::o;90:285::-;135:6;131:167;151:2;147:1;:6;131:167;;;181:1;177;:5;174:51;;;202:8;;174:51;247:1;242;:6;239:49;;;268:5;;239:49;131:167;155:3;;;;;:::i;:::-;;;;131:167;;;;308:6;328:41;338:1;334;:5;328:41;;;355:3;;;;;:::i;:::-;;;;328:41;;;121:254;90:285::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;568:77::-;605:7;634:5;623:16;;568:77;;;:::o;651:233::-;690:3;713:24;731:5;713:24;:::i;:::-;704:33;;759:66;752:5;749:77;746:103;;;829:18;;:::i;:::-;746:103;876:1;869:5;865:13;858:20;;651:233;;;:::o;890:180::-;938:77;935:1;928:88;1035:4;1032:1;1025:15;1059:4;1056:1;1049:15;1199:117;1308:1;1305;1298:12;1322:122;1395:24;1413:5;1395:24;:::i;:::-;1388:5;1385:35;1375:63;;1434:1;1431;1424:12;1375:63;1322:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94600",
								"executionCost": "141",
								"totalCost": "94741"
							},
							"external": {
								"loops()": "infinite",
								"sum(uint256)": "384"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 428,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004f641c1421057df080231a622812f3687c11dea7bbea45cb05da5b638434aff64736f6c63430008070033",
									".code": [
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "188B85B4"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "938B9CEB"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 147,
											"end": 148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 153,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 202,
											"end": 210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 242,
											"end": 248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 239,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 239,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 884,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 651,
											"end": 884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 731,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 713,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 713,
											"end": 737,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 713,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 749,
											"end": 826,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 746,
											"end": 849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 746,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 746,
											"end": 849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 849,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 746,
											"end": 849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 865,
											"end": 878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 858,
											"end": 878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 858,
											"end": 878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 651,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 651,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 890,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 938,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 935,
											"end": 936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 1016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1199,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1395,
											"end": 1419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1419,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1395,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1420,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"loops()": "938b9ceb",
							"sum(uint256)": "188b85b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loops\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"}],\"name\":\"sum\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ForAndWhileLoops.sol\":\"ForAndWhileLoops\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ForAndWhileLoops.sol\":{\"keccak256\":\"0xf41da0ace5b018a248388dc24759cc7ab2eb8b0a66a42e0d05d44e952d10bfd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d87dd130c929d40fda4410373471e0f5a230ae52a0fcf0f8da1490dccd7aecf\",\"dweb:/ipfs/QmTzog7o3VHSNjtABjLLMai4PuGQP8JPgX6RpB1CuUAznb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ForAndWhileLoops.sol": {
				"ast": {
					"absolutePath": "contracts/ForAndWhileLoops.sol",
					"exportedSymbols": {
						"ForAndWhileLoops": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "ForAndWhileLoops",
							"nameLocation": "67:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "121:254:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "160:138:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "177:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "174:51:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "184:41:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "202:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "247:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "242:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "239:49:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "250:38:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "268:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "151:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "147:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "140:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "135:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "135:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "144:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "135:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "155:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "155:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "155:3:0"
												},
												"nodeType": "ForStatement",
												"src": "131:167:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "313:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "308:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"hexValue": "30",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "317:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "308:10:0"
											},
											{
												"body": {
													"id": 38,
													"nodeType": "Block",
													"src": "341:28:0",
													"statements": [
														{
															"expression": {
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "355:3:0",
																"subExpression": {
																	"id": 35,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "355:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "355:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "334:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "338:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "334:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "WhileStatement",
												"src": "328:41:0"
											}
										]
									},
									"functionSelector": "938b9ceb",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loops",
									"nameLocation": "99:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:0:0"
									},
									"scope": 48,
									"src": "90:285:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "418:8:0",
										"statements": []
									},
									"functionSelector": "188b85b4",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "390:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_n",
												"nameLocation": "399:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:9:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:0:0"
									},
									"scope": 48,
									"src": "381:45:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 49,
							"src": "58:370:0",
							"usedErrors": []
						}
					],
					"src": "33:395:0"
				},
				"id": 0
			}
		}
	}
}