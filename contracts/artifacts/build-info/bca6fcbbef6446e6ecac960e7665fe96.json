{
	"id": "bca6fcbbef6446e6ecac960e7665fe96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ForAndWhileLoops.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract ForAndWhileLoops {\n    function loops() external pure {\n        for(uint i = 0; i < 10; i++) {\n            if(i < 3) {\n                continue;\n            }\n\n            if(i == 5) {\n                break;\n            }\n        }\n\n        uint j = 0;\n        while(j < 3) {\n            j++;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ForAndWhileLoops.sol": {
				"ForAndWhileLoops": {
					"abi": [
						{
							"inputs": [],
							"name": "loops",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ForAndWhileLoops.sol\":58:377  contract ForAndWhileLoops {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ForAndWhileLoops.sol\":58:377  contract ForAndWhileLoops {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x938b9ceb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ForAndWhileLoops.sol\":90:375  function loops() external pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/ForAndWhileLoops.sol\":135:141  uint i */\n      0x00\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n    tag_7:\n        /* \"contracts/ForAndWhileLoops.sol\":151:153  10 */\n      0x0a\n        /* \"contracts/ForAndWhileLoops.sol\":147:148  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":147:153  i < 10 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_8\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":181:182  3 */\n      0x03\n        /* \"contracts/ForAndWhileLoops.sol\":177:178  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":177:182  i < 3 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":174:225  if(i < 3) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":202:210  continue */\n      jump(tag_9)\n        /* \"contracts/ForAndWhileLoops.sol\":174:225  if(i < 3) {... */\n    tag_10:\n        /* \"contracts/ForAndWhileLoops.sol\":247:248  5 */\n      0x05\n        /* \"contracts/ForAndWhileLoops.sol\":242:243  i */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":242:248  i == 5 */\n      eq\n        /* \"contracts/ForAndWhileLoops.sol\":239:288  if(i == 5) {... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":268:273  break */\n      jump(tag_8)\n        /* \"contracts/ForAndWhileLoops.sol\":239:288  if(i == 5) {... */\n    tag_11:\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"contracts/ForAndWhileLoops.sol\":155:158  i++ */\n      dup1\n      dup1\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap2\n      pop\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":131:298  for(uint i = 0; i < 10; i++) {... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":308:314  uint j */\n      0x00\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n    tag_14:\n        /* \"contracts/ForAndWhileLoops.sol\":338:339  3 */\n      0x03\n        /* \"contracts/ForAndWhileLoops.sol\":334:335  j */\n      dup2\n        /* \"contracts/ForAndWhileLoops.sol\":334:339  j < 3 */\n      lt\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/ForAndWhileLoops.sol\":355:358  j++ */\n      dup1\n      dup1\n      tag_16\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n      swap2\n      pop\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":328:369  while(j < 3) {... */\n      jump(tag_14)\n    tag_15:\n        /* \"contracts/ForAndWhileLoops.sol\":121:375  {... */\n      pop\n        /* \"contracts/ForAndWhileLoops.sol\":90:375  function loops() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_18:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:323   */\n    tag_13:\n        /* \"#utility.yul\":129:132   */\n      0x00\n        /* \"#utility.yul\":152:176   */\n      tag_21\n        /* \"#utility.yul\":170:175   */\n      dup3\n        /* \"#utility.yul\":152:176   */\n      tag_18\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":143:176   */\n      swap2\n      pop\n        /* \"#utility.yul\":198:264   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":191:196   */\n      dup3\n        /* \"#utility.yul\":188:265   */\n      eq\n        /* \"#utility.yul\":185:288   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":268:286   */\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":185:288   */\n    tag_22:\n        /* \"#utility.yul\":315:316   */\n      0x01\n        /* \"#utility.yul\":308:313   */\n      dup3\n        /* \"#utility.yul\":304:317   */\n      add\n        /* \"#utility.yul\":297:317   */\n      swap1\n      pop\n        /* \"#utility.yul\":90:323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":329:509   */\n    tag_24:\n        /* \"#utility.yul\":377:454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":374:375   */\n      0x00\n        /* \"#utility.yul\":367:455   */\n      mstore\n        /* \"#utility.yul\":474:478   */\n      0x11\n        /* \"#utility.yul\":471:472   */\n      0x04\n        /* \"#utility.yul\":464:479   */\n      mstore\n        /* \"#utility.yul\":498:502   */\n      0x24\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":488:503   */\n      revert\n\n    auxdata: 0xa2646970667358221220ed47296ee75bae3121636072ab4275449a2c77f286fce04f9f20aa0a8117ab1f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610151806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063938b9ceb14610030575b600080fd5b61003861003a565b005b60005b600a81101561007657600381101561005457610063565b600581141561006257610076565b5b808061006e906100a3565b91505061003d565b5060005b600381101561009657808061008e906100a3565b91505061007a565b50565b6000819050919050565b60006100ae82610099565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156100e1576100e06100ec565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220ed47296ee75bae3121636072ab4275449a2c77f286fce04f9f20aa0a8117ab1f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x76 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x54 JUMPI PUSH2 0x63 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x62 JUMPI PUSH2 0x76 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x6E SWAP1 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x96 JUMPI DUP1 DUP1 PUSH2 0x8E SWAP1 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE DUP3 PUSH2 0x99 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE1 JUMPI PUSH2 0xE0 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SELFBALANCE 0x29 PUSH15 0xE75BAE3121636072AB4275449A2C77 CALLCODE DUP7 0xFC 0xE0 0x4F SWAP16 KECCAK256 0xAA EXP DUP2 OR 0xAB 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:319:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loops_41": {
									"entryPoint": 58,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:512:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "133:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "143:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "170:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "152:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "152:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "143:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "268:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "191:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "188:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "188:77:1"
															},
															"nodeType": "YulIf",
															"src": "185:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "308:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "315:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "119:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "129:3:1",
														"type": ""
													}
												],
												"src": "90:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "488:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "329:180:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063938b9ceb14610030575b600080fd5b61003861003a565b005b60005b600a81101561007657600381101561005457610063565b600581141561006257610076565b5b808061006e906100a3565b91505061003d565b5060005b600381101561009657808061008e906100a3565b91505061007a565b50565b6000819050919050565b60006100ae82610099565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156100e1576100e06100ec565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220ed47296ee75bae3121636072ab4275449a2c77f286fce04f9f20aa0a8117ab1f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938B9CEB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x76 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x54 JUMPI PUSH2 0x63 JUMP JUMPDEST PUSH1 0x5 DUP2 EQ ISZERO PUSH2 0x62 JUMPI PUSH2 0x76 JUMP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x6E SWAP1 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x96 JUMPI DUP1 DUP1 PUSH2 0x8E SWAP1 PUSH2 0xA3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE DUP3 PUSH2 0x99 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE1 JUMPI PUSH2 0xE0 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SELFBALANCE 0x29 PUSH15 0xE75BAE3121636072AB4275449A2C77 CALLCODE DUP7 0xFC 0xE0 0x4F SWAP16 KECCAK256 0xAA EXP DUP2 OR 0xAB 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:319:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;90:285;;;:::i;:::-;;;135:6;131:167;151:2;147:1;:6;131:167;;;181:1;177;:5;174:51;;;202:8;;174:51;247:1;242;:6;239:49;;;268:5;;239:49;131:167;155:3;;;;;:::i;:::-;;;;131:167;;;;308:6;328:41;338:1;334;:5;328:41;;;355:3;;;;;:::i;:::-;;;;328:41;;;121:254;90:285::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:233::-;129:3;152:24;170:5;152:24;:::i;:::-;143:33;;198:66;191:5;188:77;185:103;;;268:18;;:::i;:::-;185:103;315:1;308:5;304:13;297:20;;90:233;;;:::o;329:180::-;377:77;374:1;367:88;474:4;471:1;464:15;498:4;495:1;488:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67400",
								"executionCost": "117",
								"totalCost": "67517"
							},
							"external": {
								"loops()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 377,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed47296ee75bae3121636072ab4275449a2c77f286fce04f9f20aa0a8117ab1f64736f6c63430008070033",
									".code": [
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "938B9CEB"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 147,
											"end": 148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 147,
											"end": 153,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 202,
											"end": 210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 247,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 242,
											"end": 248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 268,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 268,
											"end": 273,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 155,
											"end": 158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 334,
											"end": 339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 369,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 170,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 152,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 143,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 188,
											"end": 265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 185,
											"end": 288,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 185,
											"end": 288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 304,
											"end": 317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 377,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 503,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"loops()": "938b9ceb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loops\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ForAndWhileLoops.sol\":\"ForAndWhileLoops\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ForAndWhileLoops.sol\":{\"keccak256\":\"0x05a4c3a30b8650793ebb9affe92e590830c9fa923141cfef319eb8d123a429b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dea90f83302fe42a81181b65fa0c8e6d903833fcfabf8bd2b250cc02a6a204d\",\"dweb:/ipfs/QmZdNEhRPgDLZfpgNC2c54pRspKdr3Sxn9s1ErH9U8BqKA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ForAndWhileLoops.sol": {
				"ast": {
					"absolutePath": "contracts/ForAndWhileLoops.sol",
					"exportedSymbols": {
						"ForAndWhileLoops": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "ForAndWhileLoops",
							"nameLocation": "67:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "121:254:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "160:138:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "177:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "181:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "174:51:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "184:41:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "202:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "247:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "242:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "239:49:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "250:38:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "268:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "151:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "147:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "140:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "135:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "135:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "144:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "135:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "155:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "155:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "155:3:0"
												},
												"nodeType": "ForStatement",
												"src": "131:167:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "313:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "308:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"hexValue": "30",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "317:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "308:10:0"
											},
											{
												"body": {
													"id": 38,
													"nodeType": "Block",
													"src": "341:28:0",
													"statements": [
														{
															"expression": {
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "355:3:0",
																"subExpression": {
																	"id": 35,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "355:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 37,
															"nodeType": "ExpressionStatement",
															"src": "355:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 32,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "334:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "338:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "334:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "WhileStatement",
												"src": "328:41:0"
											}
										]
									},
									"functionSelector": "938b9ceb",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loops",
									"nameLocation": "99:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:0:0"
									},
									"scope": 42,
									"src": "90:285:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "58:319:0",
							"usedErrors": []
						}
					],
					"src": "33:344:0"
				},
				"id": 0
			}
		}
	}
}